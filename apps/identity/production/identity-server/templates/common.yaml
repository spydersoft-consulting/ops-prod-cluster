---
# Source: identity-server/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: identity-server
  labels:
    helm.sh/chart: identity-server-0.1.0
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: identity-server
    app.kubernetes.io/version: "1.0.9"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: identity-server
---
# Source: identity-server/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-server
  labels:
    helm.sh/chart: identity-server-0.1.0
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: identity-server
    app.kubernetes.io/version: "1.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-server
      app.kubernetes.io/instance: identity-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: identity-server
        app.kubernetes.io/instance: identity-server
        spydersoft.io/log: dotnet-serilog
    spec:
      
      imagePullSecrets:
        - name: spydersoft-proget
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: identity-server
          image: "proget.mattgerega.com/spydersoft/identity/identity_server:1.2.32"
          imagePullPolicy: IfNotPresent
          env:
            - name: "Zipkin__ServiceName"
              value: "identity-server-production"
          envFrom:
            - configMapRef:
                name: identity-common-config
            - secretRef:
                name: identity-server-secrets
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
---
# Source: identity-server/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: identity-server
  labels:
    helm.sh/chart: identity-server-0.1.0
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: identity-server
    app.kubernetes.io/version: "1.0.9"
    app.kubernetes.io/managed-by: Helm
    ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: "auth.mattgerega.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: identity-server
                port:
                  number: 80
