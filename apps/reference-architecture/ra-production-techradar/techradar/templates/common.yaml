---
# Source: techradar/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: techradar-common
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
data:
  Telemetry__Log__Otlp__Endpoint: https://loki.mattgerega.net/otlp/v1/logs
  Telemetry__Metrics__Otlp__Endpoint: https://mimir.mattgerega.net/otlp
  Telemetry__Trace__Otlp__Endpoint: http://tfx-internal.gerega.net:32326
---
# Source: techradar/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: techradar-data-api
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
data:
---
# Source: techradar/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: techradar-frontend
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
data:
---
# Source: techradar/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: techradar-data-api
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/service: techradar-data-api
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: data-api
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/name: techradar
---
# Source: techradar/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: techradar-frontend
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/service: techradar-frontend
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/name: techradar
---
# Source: techradar/templates/common.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: techradar-data-api
  labels:
    app.kubernetes.io/component: data-api
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
spec:
  revisionHistoryLimit: 
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: data-api
      app.kubernetes.io/name: techradar
      app.kubernetes.io/instance: techradar
  template:
    metadata:
      annotations: 
        checksum/configMaps: 852614fc4f3529fc9a7c4f3ea463cc68becdcaf5d5e3e3713e4729f1299ef0ce
      labels: 
        app.kubernetes.io/component: data-api
        app.kubernetes.io/instance: techradar
        app.kubernetes.io/name: techradar
    spec: 
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      imagePullSecrets: 
        - name: cr-spydersoft-github
      containers: 
        - envFrom:
          - secretRef:
              name: techradar-data-api
          - configMapRef:
              name: techradar-common
          - configMapRef:
              name: techradar-data-api
          image: ghcr.io/spydersoft-consulting/techradar-data-api:1.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          name: main
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
---
# Source: techradar/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: techradar-frontend
  labels:
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
spec:
  revisionHistoryLimit: 
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: frontend
      app.kubernetes.io/name: techradar
      app.kubernetes.io/instance: techradar
  template:
    metadata:
      annotations: 
        checksum/configMaps: 852614fc4f3529fc9a7c4f3ea463cc68becdcaf5d5e3e3713e4729f1299ef0ce
      labels: 
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: techradar
        app.kubernetes.io/name: techradar
    spec: 
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      imagePullSecrets: 
        - name: cr-spydersoft-github
      containers: 
        - envFrom:
          - secretRef:
              name: techradar-frontend
          - configMapRef:
              name: techradar-common
          - configMapRef:
              name: techradar-frontend
          image: ghcr.io/spydersoft-consulting/techradar-frontend:1.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          name: main
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
---
# Source: techradar/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: techradar
  labels:
    app.kubernetes.io/instance: techradar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: techradar
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: techradar-0.1.0
spec:
  ingressClassName: nginx
  rules:
    - host: "techradar.mattgerega.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: techradar-frontend
                port:
                  number: 80
