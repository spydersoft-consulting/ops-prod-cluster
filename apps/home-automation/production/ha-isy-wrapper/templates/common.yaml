---
# Source: ha-isy-wrapper/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: ha-isy-wrapper
  labels:
    helm.sh/chart: ha-isy-wrapper-0.1.0
    app.kubernetes.io/name: ha-isy-wrapper
    app.kubernetes.io/instance: ha-isy-wrapper
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: ha-isy-wrapper
    app.kubernetes.io/instance: ha-isy-wrapper
---
# Source: ha-isy-wrapper/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ha-isy-wrapper
  labels:
    helm.sh/chart: ha-isy-wrapper-0.1.0
    app.kubernetes.io/name: ha-isy-wrapper
    app.kubernetes.io/instance: ha-isy-wrapper
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ha-isy-wrapper
      app.kubernetes.io/instance: ha-isy-wrapper
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ha-isy-wrapper
        app.kubernetes.io/instance: ha-isy-wrapper
    spec:
      
      imagePullSecrets:
        - name: spydersoft-proget
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: ha-isy-wrapper
          image: "proget.mattgerega.com/spydersoft/ha/ha.api.isywrapper:1.0.9"
          imagePullPolicy: IfNotPresent
          env:
            - name: "Identity__ApiName"
              value: "ha.api.isywrapper"
            - name: "IsyOptions__HomeAutomationUrl"
              value: "http://automation.gerega.net"
          envFrom:
            - configMapRef:
                name: home-automation-common-config
            - secretRef:
                name: isy-secrets
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
---
# Source: ha-isy-wrapper/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ha-isy-wrapper
  labels:
    helm.sh/chart: ha-isy-wrapper-0.1.0
    app.kubernetes.io/name: ha-isy-wrapper
    app.kubernetes.io/instance: ha-isy-wrapper
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: "api.mattgerega.com"
      http:
        paths:
          - path: "/ha/isywrapper(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: ha-isy-wrapper
                port:
                  number: 80
