persistence:
  redis-config:
    identifier: redis-config
    advancedMounts:
      main:
        main:
        - readOnly: true
          path: /etc/redis
    enabled: true
    type: configMap
  data:
    type: persistentVolumeClaim
    advancedMounts:
      main:
        init-permissions:
        - readOnly: false
          path: /data
        main:
        - readOnly: false
          path: /data
    storageClass: nfs-client
    size: 8Gi
    retain: true
    enabled: true
    accessMode: ReadWriteOnce
serviceAccount:
  create: true
  automount: false
  name: production-redis-master
configMaps:
  redis-config:
    enabled: true
    data:
      redis.conf: |
        # Network
        port 6379
        bind 0.0.0.0

        # Authentication - will be overridden by environment variables
        # requirepass will be set via REDISCLI_AUTH environment variable
        # masterauth will be set via REDISCLI_AUTH environment variable

        # Persistence
        dir /data
        appendonly yes
        save ""

        # Security - disable dangerous commands
        rename-command FLUSHDB ""
        rename-command FLUSHALL ""

        # Redis Stack Modules
        loadmodule /opt/redis-stack/lib/redisearch.so MAXSEARCHRESULTS 10000 MAXAGGREGATERESULTS 10000
        loadmodule /opt/redis-stack/lib/redistimeseries.so
        loadmodule /opt/redis-stack/lib/rejson.so
        loadmodule /opt/redis-stack/lib/redisbloom.so
networkPolicies:
  main:
    rules:
      ingress:
      - from: []
        ports:
        - port: 6379
          protocol: TCP
      - from: []
        ports:
        - port: 4143
          protocol: TCP
      egress:
      - to: []
    controller: main
    enabled: true
    policyTypes:
    - Ingress
    - Egress
controllers:
  main:
    type: statefulset
    containers:
      main:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
        probes:
          startup:
            spec:
              timeoutSeconds: 1
              exec:
                command:
                - /bin/bash
                - -c
                - redis-cli -h localhost -p 6379 -a $REDIS_PASSWORD ping
              initialDelaySeconds: 0
              periodSeconds: 5
              failureThreshold: 30
            enabled: true
            custom: true
          liveness:
            spec:
              timeoutSeconds: 6
              exec:
                command:
                - /bin/bash
                - -c
                - redis-cli -h localhost -p 6379 -a $REDIS_PASSWORD ping
              initialDelaySeconds: 20
              successThreshold: 1
              periodSeconds: 5
              failureThreshold: 5
            enabled: true
            custom: true
          readiness:
            spec:
              timeoutSeconds: 2
              exec:
                command:
                - /bin/bash
                - -c
                - redis-cli -h localhost -p 6379 -a $REDIS_PASSWORD ping
              initialDelaySeconds: 20
              successThreshold: 1
              periodSeconds: 5
              failureThreshold: 5
            enabled: true
            custom: true
        resources:
          limits:
            memory: 200Mi
            cpu: 100m
          requests:
            memory: 100Mi
            cpu: 50m
        command:
        - /bin/sh
        - -c
        - |
          mkdir -p /data/appendonlydir
          exec redis-server /etc/redis/redis.conf \
            --requirepass "$REDIS_PASSWORD" \
            --masterauth "$REDIS_PASSWORD"
        env:
          REDIS_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: redis-secrets
                key: redis-password
          TZ: UTC
        image:
          pullPolicy: IfNotPresent
          tag: 7.4.0-v7
          repository: redis/redis-stack-server
    revisionHistoryLimit: 10
    initContainers:
      init-permissions:
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        command:
        - /bin/sh
        - -c
        - |
          mkdir -p /data/appendonlydir
          chown -R 1001:1001 /data
          chmod -R 755 /data
        resources:
          limits:
            memory: 20Mi
            cpu: 20m
          requests:
            memory: 10Mi
            cpu: 10m
        image:
          pullPolicy: IfNotPresent
          tag: 1.36
          repository: busybox
    enabled: true
    pod:
      securityContext:
        fsGroupChangePolicy: Always
        fsGroup: 1001
    replicas: 1
podDisruptionBudget:
  main:
    maxUnavailable: 1
    controller: main
    enabled: true
service:
  headless:
    type: ClusterIP
    controller: main
    clusterIP: None
    ports:
      redis:
        port: 6379
        enabled: true
        protocol: TCP
        targetPort: 6379
    enabled: true
  main:
    type: ClusterIP
    controller: main
    primary: true
    ports:
      redis:
        port: 6379
        primary: true
        protocol: TCP
        enabled: true
        targetPort: 6379
    annotations:
      config.linkerd.io/opaque-ports: "6379"
environment: production

