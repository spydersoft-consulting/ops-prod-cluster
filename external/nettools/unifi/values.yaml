defaultPodOptions:
  securityContext:
    fsGroup: 999
controllers:
  main:
    type: deployment
    enabled: true
    strategy: Recreate
    replicas: 1
    revisionHistoryLimit: 3
    containers:
      main:
        image:
          repository: jacobalberty/unifi
          tag: v8.6.9
          pullPolicy: IfNotPresent
        env:
          UNIFI_GID: "999"
          UNIFI_STDOUT: "true"
          UNIFI_UID: "999"
          JVM_INIT_HEAP_SIZE: 
          TZ: America/New_York
          RUNAS_UID0: "false"
          JVM_MAX_HEAP_SIZE: 1024M
        probes:
          startup:
            type: TCP
            enabled: true
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              failureThreshold: 30
              periodSeconds: 5
              port: 8443
            custom: false
          liveness:
            type: TCP
            enabled: true
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              failureThreshold: 3
              periodSeconds: 10
              port: 8443
            custom: false
          readiness:
            type: TCP
            enabled: true
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              failureThreshold: 3
              periodSeconds: 10
              port: 8443
            custom: false
service:
  syslog:
    type: NodePort
    enabled: true
    ports:
      syslog:
        protocol: UDP
        port: 5514
        enabled: true
        nodePort: 32514
    controller: main
    primary: false
  main:
    type: ClusterIP
    enabled: true
    ports:
      portal-http:
        protocol: HTTP
        port: 8880
        enabled: false
      syslog:
        protocol: UDP
        port: 5514
        enabled: false
      portal-https:
        protocol: HTTPS
        port: 8843
        enabled: false
      discovery:
        protocol: UDP
        port: 10001
        enabled: false
      controller:
        protocol: TCP
        port: 8080
        enabled: false
      http:
        protocol: HTTPS
        port: 8443
      speedtest:
        protocol: TCP
        port: 6789
        enabled: true
      stun:
        protocol: UDP
        port: 3478
        enabled: false
    controller: main
    primary: true
  discovery:
    type: NodePort
    enabled: true
    ports:
      discovery:
        protocol: UDP
        port: 10001
        enabled: true
        nodePort: 30001
    controller: main
    primary: false
  controller:
    type: NodePort
    enabled: true
    ports:
      npcontroller:
        protocol: TCP
        port: 8080
        enabled: true
        nodePort: 30080
    controller: main
    primary: false
  stun:
    type: NodePort
    enabled: true
    ports:
      stun:
        protocol: UDP
        port: 3478
        enabled: true
        nodePort: 30478
    controller: main
    primary: false
customCert:
  certSecret: mattgerega.com
  enabled: true
  isChain: true
ingress:
  main:
    annotations:
      nginx.ingress.kuberenetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/proxy-body-size: 100M
      nginx.ingress.kuberenetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kuberenetes.io/proxy-connect-timeout: "3600"
    hosts:
    - host: unifi.mattgerega.com
      paths:
      - service:
          port: http
          identifier: main
        pathType: Prefix
        path: /
    enabled: true
    className: nginx
persistence:
  data:
    type: persistentVolumeClaim
    size: 5Gi
    storageClass: nfs-client
    enabled: true
    retain: true
    globalMounts:
    - readOnly: false
      path: /unifi
    accessMode: ReadWriteOnce

