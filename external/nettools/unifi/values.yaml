service:
  syslog:
    controller: main
    type: NodePort
    primary: false
    enabled: true
    ports:
      syslog:
        enabled: true
        nodePort: 32514
        protocol: UDP
        port: 5514
  controller:
    controller: main
    type: NodePort
    primary: false
    enabled: true
    ports:
      npcontroller:
        enabled: true
        nodePort: 30080
        protocol: TCP
        port: 8080
  discovery:
    controller: main
    type: NodePort
    primary: false
    enabled: true
    ports:
      discovery:
        enabled: true
        nodePort: 30001
        protocol: UDP
        port: 10001
  main:
    controller: main
    type: ClusterIP
    primary: true
    enabled: true
    ports:
      speedtest:
        enabled: true
        protocol: TCP
        port: 6789
      portal-http:
        enabled: false
        protocol: HTTP
        port: 8880
      syslog:
        enabled: false
        protocol: UDP
        port: 5514
      controller:
        enabled: false
        protocol: TCP
        port: 8080
      discovery:
        enabled: false
        protocol: UDP
        port: 10001
      portal-https:
        enabled: false
        protocol: HTTPS
        port: 8843
      http:
        protocol: HTTPS
        port: 8443
      stun:
        enabled: false
        protocol: UDP
        port: 3478
  stun:
    controller: main
    type: NodePort
    primary: false
    enabled: true
    ports:
      stun:
        enabled: true
        nodePort: 30478
        protocol: UDP
        port: 3478
persistence:
  data:
    storageClass: nfs-client
    retain: true
    globalMounts:
    - readOnly: false
      path: /unifi
    type: persistentVolumeClaim
    size: 5Gi
    enabled: true
    accessMode: ReadWriteOnce
ingress:
  main:
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 100M
      nginx.ingress.kuberenetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kuberenetes.io/proxy-connect-timeout: "3600"
      nginx.ingress.kuberenetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    enabled: true
    className: nginx
    hosts:
    - host: unifi.mattgerega.com
      paths:
      - pathType: Prefix
        service:
          port: http
          identifier: main
        path: /
controllers:
  main:
    strategy: Recreate
    revisionHistoryLimit: 3
    type: deployment
    replicas: 1
    enabled: true
    containers:
      main:
        probes:
          startup:
            custom: false
            enabled: true
            spec:
              timeoutSeconds: 1
              port: 8443
              periodSeconds: 5
              failureThreshold: 30
              initialDelaySeconds: 0
            type: TCP
          readiness:
            custom: false
            enabled: true
            spec:
              timeoutSeconds: 1
              port: 8443
              periodSeconds: 10
              failureThreshold: 3
              initialDelaySeconds: 0
            type: TCP
          liveness:
            custom: false
            enabled: true
            spec:
              timeoutSeconds: 1
              port: 8443
              periodSeconds: 10
              failureThreshold: 3
              initialDelaySeconds: 0
            type: TCP
        image:
          repository: jacobalberty/unifi
          pullPolicy: IfNotPresent
          tag: v8.4.62
        env:
          TZ: America/New_York
          RUNAS_UID0: "false"
          JVM_INIT_HEAP_SIZE: 
          UNIFI_GID: "999"
          JVM_MAX_HEAP_SIZE: 1024M
          UNIFI_STDOUT: "true"
          UNIFI_UID: "999"
customCert:
  enabled: true
  isChain: true
  certSecret: mattgerega.com
defaultPodOptions:
  securityContext:
    fsGroup: 999

